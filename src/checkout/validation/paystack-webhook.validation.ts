// Generated by ts-to-zod
import { z } from 'zod';

export const customerSchema = z.object({
	id: z.number(),
	first_name: z.string(),
	last_name: z.string(),
	email: z.string(),
	customer_code: z.string(),
	phone: z.null(),
	metadata: z.null(),
	risk_action: z.string(),
});

export const authorizationSchema = z.object({
	authorization_code: z.string(),
	bin: z.string(),
	last4: z.string(),
	exp_month: z.string(),
	exp_year: z.string(),
	card_type: z.string(),
	bank: z.string(),
	country_code: z.string(),
	brand: z.string(),
	account_name: z.string(),
});

export const planSchema = z.object({});

export const historySchema = z.object({
	type: z.string(),
	message: z.string(),
	time: z.number(),
});

export const logSchema = z.object({
	time_spent: z.number(),
	attempts: z.number(),
	authentication: z.string(),
	errors: z.number(),
	success: z.boolean(),
	mobile: z.boolean(),
	input: z.array(z.any()),
	channel: z.null(),
	history: z.array(historySchema),
});

export const dataSchema = z.object({
	id: z.number(),
	domain: z.string(),
	status: z.string(),
	reference: z.string(),
	amount: z.number(),
	message: z.null().optional(),
	gateway_response: z.string().optional(),
	paid_at: z.date().optional(),
	created_at: z.date().optional(),
	channel: z.string().optional(),
	currency: z.string(),
	ip_address: z.string().optional(),
	metadata: z.number().optional(),
	log: logSchema.optional(),
	fees: z.null().optional(),
	customer: customerSchema.optional(),
	authorization: authorizationSchema.optional(),
	plan: planSchema.optional(),
});

export const payStackHookResSchema = z.object({
	event: z.string(),
	data: dataSchema,
});

export const paystackHeaderValidation = z.object({
	'x-paystack-signature': z.string({required_error: 'required header is a string'}),
})